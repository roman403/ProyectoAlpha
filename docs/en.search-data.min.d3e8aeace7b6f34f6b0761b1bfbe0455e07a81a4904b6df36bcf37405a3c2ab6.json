[{"id":0,"href":"/ProyectoAlpha/posts/nginx/","title":"Nginx","section":"Posts","content":"Esto es la documentacion de Nginx\nAquí te paso el contenido que mencionaste en formato Markdown (.md) hasta el punto de \u0026ldquo;Conexión segura\u0026rdquo;:\n# REDHAT S.O. Hemos elegido varios S.O. cada uno centrado en una tarea para un mejor rendimiento y una mayor redundancia. Así evitamos que si una máquina se cae, sea lo que perjudique a varios servicios a la vez. ## REDHAT Lo lanzamos con AWS. La configuración por ahora será la default y le iremos modificando mientras progresa el proyecto. ## Servicios ### Nginx #### Instalación La instalación de Nginx será en la máquina de **REDHAT**. Nos conectamos a la máquina mediante SSH. Ahora, con el comando `yum` y con los permisos de `sudo`, instalamos Nginx: ```bash sudo yum install nginx Le damos a y (sí).\nConfiguración\r#\rPrimero, iniciamos el servicio de Nginx con el comando start:\nsudo systemctl start nginx Luego habilitamos el inicio automático cada vez que se inicie el sistema:\nsudo systemctl enable nginx Ahora, si hacemos un status, veremos que el servidor está encendido:\nsudo systemctl status nginx Para que todo el mundo pueda acceder, habilitamos en las reglas de entrada el puerto 80:\nsudo firewall-cmd --zone=public --add-port=80/tcp --permanent sudo firewall-cmd --reload Al ser un servidor que sirve a la red, le decimos que escuche para todas las IP y en cualquier red.\nAl buscar nuestra IP, nos toparemos con la página predeterminada de Nginx.\nEditamos el fichero de configuración de Nginx del virtual host sin TLS.\nArchivos HTML\r#\rLos enviamos con el comando scp:\nscp -r /ruta/a/archivos usuario@ip_destino:/ruta/de/destino Instalamos la herramienta zip:\nsudo yum install zip Ahora, moveremos las carpetas que necesitemos, en este caso son todas menos las carpetas empresa y ventas.\nUna vez los tenemos, ya funcionará la configuración de Nginx.\nCambiar propietario y grupo\r#\rPara cambiar el propietario y el grupo propietario, usamos el siguiente comando:\nsudo chown -R usuario:grupo /ruta/del/directorio Cambiar privilegios\r#\rFinalmente, cambiamos los privilegios necesarios para los archivos:\nsudo chmod -R 755 /ruta/del/directorio "},{"id":1,"href":"/ProyectoAlpha/posts/dns/","title":"DNS","section":"Posts","content":"\rConfiguración de DNS en AWS\r#\rPaso 1: Crear las máquinas en AWS\r#\rCreamos las máquinas en AWS y usamos la contraseña generada para conectarnos mediante acceso remoto de Windows. Usamos el usuario Administrator y la IP pública de la máquina.\nSistema Operativo: Windows Server 2022\nPaso 2: Instalación del DNS\r#\rUna vez conectados, instalamos el servicio DNS desde Roles y Características.\nPaso 3: Acceso a Herramientas Administrativas\r#\rNos dirigimos a Herramientas Administrativas y seleccionamos DNS.\nPaso 4: Crear una zona primaria\r#\rCreamos una Zona Nueva Primaria.\nPaso 5: Configurar el dominio\r#\rConfiguramos el dominio deseado.\nPaso 6: Crear alias para las máquinas\r#\rCreamos 4 alias que representarán las máquinas que usaremos en el reto (utilizando las IPs privadas).\nPaso 7: Configurar un servidor secundario\r#\rAñadimos un servidor secundario, configurado para realizar la transferencia solo a dicho equipo por motivos de seguridad. Este servidor será una máquina con Ubuntu 24.\nPaso 8: Cambiar el DNS de la máquina primaria y realizar comprobaciones\r#\rModificamos la configuración del DNS en la máquina primaria y realizamos una comprobación para validar los cambios.\nPaso 9: Configuración del servidor secundario\r#\rNos conectamos a la máquina secundaria, que será un servidor con Ubuntu 24. Cambiamos la configuración del DNS, apuntando a la IP de la máquina primaria. Instalamos el servicio DNS en Ubuntu. "},{"id":2,"href":"/ProyectoAlpha/documentacion/","title":"Documentacion","section":"Proyecto-Alpha","content":"Estes es un sitio web creado con hugo\nestoy probandoa ver si funciona yaaa\nEs super poderoso\nRapdio lente poco "}]